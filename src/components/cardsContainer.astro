---
import Card from "./Card.astro";

const ITEMS_PER_PAGE = 12;
const TOTAL_POKEMONS = 151;

// Fetch initial Pokémon data
async function fetchPokemonData(start: number, limit: number) {
  try {
    const pokemons = [];
    for (let i = start; i < start + limit && i <= TOTAL_POKEMONS; i++) {
      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}`);
      const data = await response.json();

      pokemons.push({
        id: data.id,
        name: data.name.charAt(0).toUpperCase() + data.name.slice(1),
        image:
          data.sprites.other["official-artwork"].front_default ||
          data.sprites.front_default,
        type: data.types.map((type) => type.type.name),
      });
    }
    return pokemons;
  } catch (error) {
    console.error("Error fetching Pokemon data:", error);
    return [];
  }
}

// Initial fetch of first 12 Pokémon
const initialPokemons = await fetchPokemonData(1, ITEMS_PER_PAGE);
---

<div class="container mx-auto px-4 py-8">
  <div
    id="pokemonGrid"
    class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"
  >
    {
      initialPokemons.map((pokemon) => (
        <div class="pokemon-card w-full h-full p-2">
          <Card
            id={pokemon.id}
            name={pokemon.name}
            image={pokemon.image}
            type={pokemon.type}
          />
        </div>
      ))
    }
  </div>

  {
    initialPokemons.length < TOTAL_POKEMONS && (
      <div class="text-center mt-8">
        <button
          id="loadMore"
          class="group border-none flex flex-row mx-auto items-center justify-center"
        >
          <img
            src="/img/logos/smallLogo.png"
            alt="Cargar más"
            class="h-24 group-hover:scale-110 group-hover:ml-0 ml-32 lg:ml-36  transition-all duration-110"
          />
          <span class="text-2xl pl-3 opacity-0 group-hover:opacity-100 group-hover:animate-fade-in-right transition-all duration-110">
            Cargar más
          </span>
        </button>
      </div>
    )
  }
</div>

<style>
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  #loadMore.loading img {
    animation: spin 1s linear infinite;
  }

  /* Disable hover effect while loading */
  #loadMore.loading img:hover {
    transform: none;
  }
</style>

<script>
  const ITEMS_PER_PAGE = 12;
  const TOTAL_POKEMONS = 151;
  let currentPage = 1;

  // DOM Elements
  const loadMoreButton = document.querySelector(
    "#loadMore"
  ) as HTMLButtonElement;
  const pokemonGrid = document.getElementById("pokemonGrid");

  // Add event listener to the button
  if (loadMoreButton) {
    loadMoreButton.addEventListener("click", handleLoadMore);
  }

  async function fetchMorePokemon(start) {
    const pokemons = [];
    const limit = ITEMS_PER_PAGE;
    const typeTranslations = {
      normal: "normal",
      fighting: "lucha",
      flying: "volador",
      poison: "veneno",
      ground: "tierra",
      rock: "roca",
      bug: "bicho",
      ghost: "fantasma",
      steel: "acero",
      fire: "fuego",
      water: "agua",
      grass: "planta",
      electric: "eléctrico",
      psychic: "psíquico",
      ice: "hielo",
      dragon: "dragón",
      dark: "siniestro",
      fairy: "hada",
    };

    for (let i = start; i < start + limit && i <= TOTAL_POKEMONS; i++) {
      try {
        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}`);
        const data = await response.json();

        pokemons.push({
          id: data.id,
          name: data.name.charAt(0).toUpperCase() + data.name.slice(1),
          image:
            data.sprites.other["official-artwork"].front_default ||
            data.sprites.front_default,
          type: data.types.map(
            (type) => typeTranslations[type.type.name] || type.type.name
          ),
        });
      } catch (error) {
        console.error(`Error fetching pokemon ${i}:`, error);
      }
    }

    return pokemons;
  }

  function createPokemonCard(pokemon) {
    const typeGradients = {
      normal: "from-gray-400 to-gray-500",
      lucha: "from-red-600 to-red-700",
      volador: "from-blue-300 to-gray-300",
      veneno: "from-purple-500 to-purple-700",
      tierra: "from-yellow-600 to-yellow-700",
      roca: "from-gray-500 to-yellow-600",
      bicho: "from-green-400 to-green-600",
      fantasma: "from-purple-600 to-indigo-700",
      acero: "from-gray-400 to-gray-600",
      fuego: "from-orange-500 to-red-600",
      agua: "from-blue-400 to-blue-600",
      planta: "from-green-400 to-green-700",
      eléctrico: "from-yellow-300 to-yellow-500",
      psíquico: "from-pink-400 to-pink-600",
      hielo: "from-blue-200 to-blue-400",
      dragón: "from-purple-500 to-red-500",
      siniestro: "from-gray-700 to-gray-900",
      hada: "from-pink-300 to-pink-500",
    };

    // Get gradient class based on pokemon type, with better error handling
    const firstType = pokemon.type[0]?.toLowerCase();
    const gradientClass =
      firstType && typeGradients[firstType]
        ? typeGradients[firstType]
        : "from-blue-400 to-purple-500";

    // console.log("Pokemon type:", firstType, "Gradient:", gradientClass);

    const cardHTML = `
      <div class="pokemon-card w-full h-full p-2">
        <a href="/pokemon/${pokemon.id}" class="w-full h-full bg-white rounded-xl shadow-md flex flex-col overflow-hidden items-center justify-center">
          <div class="relative w-full h-40 mb-24 bg-gradient-to-r ${gradientClass}">
            <div class="absolute left-1/2 -bottom-16 -translate-x-1/2">
              <div class="relative w-48 h-48">
                <div class="absolute inset-0 rounded-full bg-white shadow-lg z-10"></div>
                <div class="absolute inset-2 rounded-full overflow-hidden z-20">
                  <img src="${pokemon.image}" alt="${pokemon.name}" class="w-full h-full object-cover p-6" />
                </div>
              </div>
            </div>
          </div>
          <div class="pb-4 text-center">
            <h2 class="text-xl font-bold mb-2">${pokemon.name}</h2>
            <p class="text-gray-600 flex-grow">Tipo: ${pokemon.type.join(", ")}</p>
          </div>
        </a>
      </div>
    `;

    const temp = document.createElement("div");
    temp.innerHTML = cardHTML;
    return temp.firstElementChild;
  }

  async function handleLoadMore() {
    if (!loadMoreButton || !pokemonGrid) return;

    // Add loading state
    loadMoreButton.classList.add("loading");
    loadMoreButton.disabled = true;

    try {
      const start = currentPage * ITEMS_PER_PAGE + 1;
      const pokemons = await fetchMorePokemon(start);

      // Add new pokemon cards to the grid
      pokemons.forEach((pokemon) => {
        const card = createPokemonCard(pokemon);
        if (card) pokemonGrid.appendChild(card);
      });

      currentPage++;

      if (currentPage * ITEMS_PER_PAGE >= TOTAL_POKEMONS) {
        loadMoreButton.style.display = "none";
      }
    } catch (error) {
      console.error("Error loading more pokemon:", error);
    } finally {
      // Remove loading state
      loadMoreButton.classList.remove("loading");
      loadMoreButton.disabled = false;
    }
  }
</script>
